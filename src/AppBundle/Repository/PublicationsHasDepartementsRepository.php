<?php

namespace AppBundle\Repository;

/**
 * PublicationsHasDepartementsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PublicationsHasDepartementsRepository extends \Doctrine\ORM\EntityRepository
{
    public function findAllDepartementsFromPublicationBuilder($id_publication)
    {
        return $this->createQueryBuilder('a','a.id')
            ->select ('a')
            ->where('a.publication = ?1')
            ->setParameter(1,$id_publication);
    }

    public function findAllDepartementsFromPublication ($id_publication)
    {
        return $this->findAllDepartementsFromPublicationBuilder($id_publication)->getQuery()->getResult();
    }

    public function getArrayIdFromPublicationDepartement ($id_publication)
    {
        $result = array();
        $array  =  $this->findAllDepartementsFromPublication($id_publication);

        foreach ($array as $key=>$value)
        {
            if ($value->getDepartement() != null)
            {
                $id = $value->getDepartement()->getId();
                $result[] = $id;
            }
        }
        return $result;
    }

    public function findAllPublicationsFromDepartementBuilder($id_equipe)
    {
        return $this->createQueryBuilder('a','a.id')
            ->select ('a')
            ->innerJoin('a.publication', 'b')
            ->where('a.equipe = ?1')
            ->setParameter(1,$id_equipe)
            ->orderBy('b.anneePublication','DESC');
    }

    public function findAllPublicationsFromDepartement ($id_equipe)
    {
        return $this->findAllPublicationsFromDepartementBuilder($id_equipe)->getQuery()->getResult();
    }

    public function findLastPublicationsFromDepartementBuilder($id_equipe, $nb)
    {
        return $this->createQueryBuilder('a','a.id')
            ->select ('a')
            ->innerJoin('CRESTICPublicationsBundle:Publications', 'p', 'WITH', 'a.publication = p.id')
            ->where('a.equipe = ?1')
            ->setParameter(1, $id_equipe)
            ->orderBy('p.anneePublication, p.moisPublication', 'DESC')
            ->setMaxResults($nb);
    }

    public function findLastPublicationsFromDepartement ($id_equipe, $nb)
    {
        return $this->findLastPublicationsFromDepartementBuilder($id_equipe, $nb)->getQuery()->getResult();
    }
}
